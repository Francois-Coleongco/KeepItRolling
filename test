Audio extracted to /home/soy/Downloads/tcp_short_final.mp4_tmp_.wav
[00:00.000 --> 00:04.840]  So I was digging through the man pages because that's what you do when you're trying to build a multi-threading creative file server in C++
[00:04.840 --> 00:06.260]  Which is painful by the way
[00:06.260 --> 00:08.840]  I was trying to figure out why I was getting this partial read error
[00:08.840 --> 00:13.540]  Basically that's when you try to read a certain amount of data from the network but only get part of it
[00:13.540 --> 00:19.640]  Now the reason I was getting this was because TCP actually uses something I haven't heard people talk about
[00:19.640 --> 00:21.360]  And that's the receive buffer
[00:21.360 --> 00:23.600]  Every TCP connection has one in the kernel
[00:23.600 --> 00:26.740]  And it acts like a little inbox for incoming data
[00:26.740 --> 00:31.160]  If that inbox fills up, your program can't take anymore and the client has to wait.
[00:31.640 --> 00:34.040]  So what do you do if we run into a partial read like this?
[00:34.480 --> 00:41.800]  Well, the solution is actually really simple and it's to create a wrapper around Redfie that reads until we've reached LenBites
[00:41.800 --> 00:44.220]  where Len is the size that we expect.
Transcription:  {'text': " So I was digging through the man pages because that's what you do when you're trying to build a multi-threading creative file server in C++ Which is painful by the way I was trying to figure out why I was getting this partial read error Basically that's when you try to read a certain amount of data from the network but only get part of it Now the reason I was getting this was because TCP actually uses something I haven't heard people talk about And that's the receive buffer Every TCP connection has one in the kernel And it acts like a little inbox for incoming data If that inbox fills up, your program can't take anymore and the client has to wait. So what do you do if we run into a partial read like this? Well, the solution is actually really simple and it's to create a wrapper around Redfie that reads until we've reached LenBites where Len is the size that we expect.", 'segments': [{'id': 0, 'seek': 0, 'start': np.float64(0.0), 'end': np.float64(4.84), 'text': " So I was digging through the man pages because that's what you do when you're trying to build a multi-threading creative file server in C++", 'tokens': [50363, 1406, 314, 373, 18894, 832, 262, 582, 5468, 780, 326, 338, 644, 345, 466, 618, 345, 821, 2111, 284, 1382, 257, 5021, 12, 16663, 278, 7325, 2393, 4382, 287, 327, 4880, 50615], 'temperature': 0.0, 'avg_logprob': -0.22616027549461082, 'compression_ratio': 1.7303030303030302, 'no_speech_prob': 0.009415959939360619, 'words': [{'word': ' So', 'start': np.float64(0.0), 'end': np.float64(0.24), 'probability': np.float64(0.7440764904022217)}, {'word': ' I', 'start': np.float64(0.24), 'end': np.float64(0.38), 'probability': np.float64(0.820458173751831)}, {'word': ' was', 'start': np.float64(0.38), 'end': np.float64(0.52), 'probability': np.float64(0.9877925515174866)}, {'word': ' digging', 'start': np.float64(0.52), 'end': np.float64(0.66), 'probability': np.float64(0.9643407464027405)}, {'word': ' through', 'start': np.float64(0.66), 'end': np.float64(0.82), 'probability': np.float64(0.9387671947479248)}, {'word': ' the', 'start': np.float64(0.82), 'end': np.float64(1.0), 'probability': np.float64(0.9704984426498413)}, {'word': ' man', 'start': np.float64(1.0), 'end': np.float64(1.1), 'probability': np.float64(0.705638587474823)}, {'word': ' pages', 'start': np.float64(1.1), 'end': np.float64(1.4), 'probability': np.float64(0.912513017654419)}, {'word': ' because', 'start': np.float64(1.4), 'end': np.float64(1.66), 'probability': np.float64(0.7917237281799316)}, {'word': " that's", 'start': np.float64(1.66), 'end': np.float64(1.92), 'probability': np.float64(0.9710865914821625)}, {'word': ' what', 'start': np.float64(1.92), 'end': np.float64(1.98), 'probability': np.float64(0.9921225905418396)}, {'word': ' you', 'start': np.float64(1.98), 'end': np.float64(2.1), 'probability': np.float64(0.9957194924354553)}, {'word': ' do', 'start': np.float64(2.1), 'end': np.float64(2.24), 'probability': np.float64(0.9905775785446167)}, {'word': ' when', 'start': np.float64(2.24), 'end': np.float64(2.34), 'probability': np.float64(0.9886035919189453)}, {'word': " you're", 'start': np.float64(2.34), 'end': np.float64(2.5), 'probability': np.float64(0.9503525793552399)}, {'word': ' trying', 'start': np.float64(2.5), 'end': np.float64(2.58), 'probability': np.float64(0.9930256605148315)}, {'word': ' to', 'start': np.float64(2.58), 'end': np.float64(2.72), 'probability': np.float64(0.9938212037086487)}, {'word': ' build', 'start': np.float64(2.72), 'end': np.float64(2.86), 'probability': np.float64(0.9959275126457214)}, {'word': ' a', 'start': np.float64(2.86), 'end': np.float64(3.04), 'probability': np.float64(0.9827762842178345)}, {'word': ' multi', 'start': np.float64(3.04), 'end': np.float64(3.22), 'probability': np.float64(0.7869857549667358)}, {'word': '-threading', 'start': np.float64(3.22), 'end': np.float64(3.56), 'probability': np.float64(0.693899025519689)}, {'word': ' creative', 'start': np.float64(3.56), 'end': np.float64(3.68), 'probability': np.float64(0.24551185965538025)}, {'word': ' file', 'start': np.float64(3.68), 'end': np.float64(3.94), 'probability': np.float64(0.9117856025695801)}, {'word': ' server', 'start': np.float64(3.94), 'end': np.float64(4.18), 'probability': np.float64(0.8826090693473816)}, {'word': ' in', 'start': np.float64(4.18), 'end': np.float64(4.36), 'probability': np.float64(0.9594849348068237)}, {'word': ' C++', 'start': np.float64(4.36), 'end': np.float64(4.84), 'probability': np.float64(0.9808934926986694)}]}, {'id': 1, 'seek': 0, 'start': np.float64(4.84), 'end': np.float64(6.26), 'text': ' Which is painful by the way', 'tokens': [50615, 9022, 318, 12132, 416, 262, 835, 50681], 'temperature': 0.0, 'avg_logprob': -0.22616027549461082, 'compression_ratio': 1.7303030303030302, 'no_speech_prob': 0.009415959939360619, 'words': [{'word': ' Which', 'start': np.float64(4.84), 'end': np.float64(5.42), 'probability': np.float64(0.11646557599306107)}, {'word': ' is', 'start': np.float64(5.42), 'end': np.float64(5.54), 'probability': np.float64(0.8577568531036377)}, {'word': ' painful', 'start': np.float64(5.54), 'end': np.float64(5.78), 'probability': np.float64(0.989498496055603)}, {'word': ' by', 'start': np.float64(5.78), 'end': np.float64(5.96), 'probability': np.float64(0.6464444398880005)}, {'word': ' the', 'start': np.float64(5.96), 'end': np.float64(6.1), 'probability': np.float64(0.9992836117744446)}, {'word': ' way', 'start': np.float64(6.1), 'end': np.float64(6.26), 'probability': np.float64(0.9996040463447571)}]}, {'id': 2, 'seek': 0, 'start': np.float64(6.26), 'end': np.float64(8.84), 'text': ' I was trying to figure out why I was getting this partial read error', 'tokens': [50681, 314, 373, 2111, 284, 3785, 503, 1521, 314, 373, 1972, 428, 13027, 1100, 4049, 50809], 'temperature': 0.0, 'avg_logprob': -0.22616027549461082, 'compression_ratio': 1.7303030303030302, 'no_speech_prob': 0.009415959939360619, 'words': [{'word': ' I', 'start': np.float64(6.26), 'end': np.float64(6.48), 'probability': np.float64(0.3053531348705292)}, {'word': ' was', 'start': np.float64(6.48), 'end': np.float64(6.6), 'probability': np.float64(0.9947206974029541)}, {'word': ' trying', 'start': np.float64(6.6), 'end': np.float64(6.72), 'probability': np.float64(0.9964439272880554)}, {'word': ' to', 'start': np.float64(6.72), 'end': np.float64(6.82), 'probability': np.float64(0.9990298748016357)}, {'word': ' figure', 'start': np.float64(6.82), 'end': np.float64(7.0), 'probability': np.float64(0.9961852431297302)}, {'word': ' out', 'start': np.float64(7.0), 'end': np.float64(7.18), 'probability': np.float64(0.9977389574050903)}, {'word': ' why', 'start': np.float64(7.18), 'end': np.float64(7.28), 'probability': np.float64(0.982379674911499)}, {'word': ' I', 'start': np.float64(7.28), 'end': np.float64(7.36), 'probability': np.float64(0.9828776121139526)}, {'word': ' was', 'start': np.float64(7.36), 'end': np.float64(7.46), 'probability': np.float64(0.9968668818473816)}, {'word': ' getting', 'start': np.float64(7.46), 'end': np.float64(7.64), 'probability': np.float64(0.9979879856109619)}, {'word': ' this', 'start': np.float64(7.64), 'end': np.float64(7.88), 'probability': np.float64(0.9858339428901672)}, {'word': ' partial', 'start': np.float64(7.88), 'end': np.float64(8.28), 'probability': np.float64(0.9383603930473328)}, {'word': ' read', 'start': np.float64(8.28), 'end': np.float64(8.52), 'probability': np.float64(0.9585130214691162)}, {'word': ' error', 'start': np.float64(8.52), 'end': np.float64(8.84), 'probability': np.float64(0.9989238381385803)}]}, {'id': 3, 'seek': 0, 'start': np.float64(8.84), 'end': np.float64(13.54), 'text': " Basically that's when you try to read a certain amount of data from the network but only get part of it", 'tokens': [50809, 20759, 326, 338, 618, 345, 1949, 284, 1100, 257, 1728, 2033, 286, 1366, 422, 262, 3127, 475, 691, 651, 636, 286, 340, 51044], 'temperature': 0.0, 'avg_logprob': -0.22616027549461082, 'compression_ratio': 1.7303030303030302, 'no_speech_prob': 0.009415959939360619, 'words': [{'word': ' Basically', 'start': np.float64(8.84), 'end': np.float64(9.38), 'probability': np.float64(0.6613095998764038)}, {'word': " that's", 'start': np.float64(9.38), 'end': np.float64(9.78), 'probability': np.float64(0.6858623921871185)}, {'word': ' when', 'start': np.float64(9.78), 'end': np.float64(9.88), 'probability': np.float64(0.9967485666275024)}, {'word': ' you', 'start': np.float64(9.88), 'end': np.float64(10.0), 'probability': np.float64(0.9869677424430847)}, {'word': ' try', 'start': np.float64(10.0), 'end': np.float64(10.12), 'probability': np.float64(0.9924853444099426)}, {'word': ' to', 'start': np.float64(10.12), 'end': np.float64(10.24), 'probability': np.float64(0.9967197775840759)}, {'word': ' read', 'start': np.float64(10.24), 'end': np.float64(10.42), 'probability': np.float64(0.9969869256019592)}, {'word': ' a', 'start': np.float64(10.42), 'end': np.float64(10.7), 'probability': np.float64(0.9959696531295776)}, {'word': ' certain', 'start': np.float64(10.7), 'end': np.float64(10.92), 'probability': np.float64(0.9987155199050903)}, {'word': ' amount', 'start': np.float64(10.92), 'end': np.float64(11.12), 'probability': np.float64(0.998577356338501)}, {'word': ' of', 'start': np.float64(11.12), 'end': np.float64(11.28), 'probability': np.float64(0.9976824522018433)}, {'word': ' data', 'start': np.float64(11.28), 'end': np.float64(11.46), 'probability': np.float64(0.9819627404212952)}, {'word': ' from', 'start': np.float64(11.46), 'end': np.float64(11.66), 'probability': np.float64(0.9960814118385315)}, {'word': ' the', 'start': np.float64(11.66), 'end': np.float64(11.8), 'probability': np.float64(0.9946148991584778)}, {'word': ' network', 'start': np.float64(11.8), 'end': np.float64(12.06), 'probability': np.float64(0.9950985312461853)}, {'word': ' but', 'start': np.float64(12.06), 'end': np.float64(12.22), 'probability': np.float64(0.49642214179039)}, {'word': ' only', 'start': np.float64(12.22), 'end': np.float64(12.56), 'probability': np.float64(0.9916489124298096)}, {'word': ' get', 'start': np.float64(12.56), 'end': np.float64(12.8), 'probability': np.float64(0.9949061870574951)}, {'word': ' part', 'start': np.float64(12.8), 'end': np.float64(13.16), 'probability': np.float64(0.9519852995872498)}, {'word': ' of', 'start': np.float64(13.16), 'end': np.float64(13.28), 'probability': np.float64(0.9994930028915405)}, {'word': ' it', 'start': np.float64(13.28), 'end': np.float64(13.54), 'probability': np.float64(0.999352753162384)}]}, {'id': 4, 'seek': 0, 'start': np.float64(13.54), 'end': np.float64(19.64), 'text': " Now the reason I was getting this was because TCP actually uses something I haven't heard people talk about", 'tokens': [51044, 2735, 262, 1738, 314, 373, 1972, 428, 373, 780, 23633, 1682, 3544, 1223, 314, 4398, 470, 2982, 661, 1561, 546, 51347], 'temperature': 0.0, 'avg_logprob': -0.22616027549461082, 'compression_ratio': 1.7303030303030302, 'no_speech_prob': 0.009415959939360619, 'words': [{'word': ' Now', 'start': np.float64(13.54), 'end': np.float64(14.02), 'probability': np.float64(0.7028360962867737)}, {'word': ' the', 'start': np.float64(14.02), 'end': np.float64(14.44), 'probability': np.float64(0.7779262065887451)}, {'word': ' reason', 'start': np.float64(14.44), 'end': np.float64(14.7), 'probability': np.float64(0.9980937838554382)}, {'word': ' I', 'start': np.float64(14.7), 'end': np.float64(14.96), 'probability': np.float64(0.9890090823173523)}, {'word': ' was', 'start': np.float64(14.96), 'end': np.float64(15.1), 'probability': np.float64(0.9994526505470276)}, {'word': ' getting', 'start': np.float64(15.1), 'end': np.float64(15.3), 'probability': np.float64(0.9991737008094788)}, {'word': ' this', 'start': np.float64(15.3), 'end': np.float64(15.58), 'probability': np.float64(0.9981687068939209)}, {'word': ' was', 'start': np.float64(15.58), 'end': np.float64(15.76), 'probability': np.float64(0.9559420943260193)}, {'word': ' because', 'start': np.float64(15.76), 'end': np.float64(16.2), 'probability': np.float64(0.997000515460968)}, {'word': ' TCP', 'start': np.float64(16.2), 'end': np.float64(16.62), 'probability': np.float64(0.981759786605835)}, {'word': ' actually', 'start': np.float64(16.62), 'end': np.float64(17.06), 'probability': np.float64(0.9833986759185791)}, {'word': ' uses', 'start': np.float64(17.06), 'end': np.float64(17.34), 'probability': np.float64(0.9961274266242981)}, {'word': ' something', 'start': np.float64(17.34), 'end': np.float64(17.8), 'probability': np.float64(0.9952788352966309)}, {'word': ' I', 'start': np.float64(17.8), 'end': np.float64(18.2), 'probability': np.float64(0.9808655977249146)}, {'word': " haven't", 'start': np.float64(18.2), 'end': np.float64(18.54), 'probability': np.float64(0.9929547905921936)}, {'word': ' heard', 'start': np.float64(18.54), 'end': np.float64(18.76), 'probability': np.float64(0.996944010257721)}, {'word': ' people', 'start': np.float64(18.76), 'end': np.float64(19.06), 'probability': np.float64(0.995598316192627)}, {'word': ' talk', 'start': np.float64(19.06), 'end': np.float64(19.36), 'probability': np.float64(0.9925650358200073)}, {'word': ' about', 'start': np.float64(19.36), 'end': np.float64(19.64), 'probability': np.float64(0.9993270635604858)}]}, {'id': 5, 'seek': 0, 'start': np.float64(19.64), 'end': np.float64(21.36), 'text': " And that's the receive buffer", 'tokens': [51347, 843, 326, 338, 262, 3328, 11876, 51439], 'temperature': 0.0, 'avg_logprob': -0.22616027549461082, 'compression_ratio': 1.7303030303030302, 'no_speech_prob': 0.009415959939360619, 'words': [{'word': ' And', 'start': np.float64(19.64), 'end': np.float64(19.88), 'probability': np.float64(0.1367822289466858)}, {'word': " that's", 'start': np.float64(19.88), 'end': np.float64(20.44), 'probability': np.float64(0.9960399270057678)}, {'word': ' the', 'start': np.float64(20.44), 'end': np.float64(20.64), 'probability': np.float64(0.9674879312515259)}, {'word': ' receive', 'start': np.float64(20.64), 'end': np.float64(20.96), 'probability': np.float64(0.7972573637962341)}, {'word': ' buffer', 'start': np.float64(20.96), 'end': np.float64(21.36), 'probability': np.float64(0.9967588782310486)}]}, {'id': 6, 'seek': 0, 'start': np.float64(21.36), 'end': np.float64(23.6), 'text': ' Every TCP connection has one in the kernel', 'tokens': [51439, 3887, 23633, 4637, 468, 530, 287, 262, 9720, 51551], 'temperature': 0.0, 'avg_logprob': -0.22616027549461082, 'compression_ratio': 1.7303030303030302, 'no_speech_prob': 0.009415959939360619, 'words': [{'word': ' Every', 'start': np.float64(21.36), 'end': np.float64(21.8), 'probability': np.float64(0.78089439868927)}, {'word': ' TCP', 'start': np.float64(21.8), 'end': np.float64(22.14), 'probability': np.float64(0.9909641742706299)}, {'word': ' connection', 'start': np.float64(22.14), 'end': np.float64(22.54), 'probability': np.float64(0.9975568056106567)}, {'word': ' has', 'start': np.float64(22.54), 'end': np.float64(22.84), 'probability': np.float64(0.9967514276504517)}, {'word': ' one', 'start': np.float64(22.84), 'end': np.float64(23.06), 'probability': np.float64(0.9963870048522949)}, {'word': ' in', 'start': np.float64(23.06), 'end': np.float64(23.24), 'probability': np.float64(0.9979111552238464)}, {'word': ' the', 'start': np.float64(23.24), 'end': np.float64(23.4), 'probability': np.float64(0.9919409155845642)}, {'word': ' kernel', 'start': np.float64(23.4), 'end': np.float64(23.6), 'probability': np.float64(0.9921378493309021)}]}, {'id': 7, 'seek': 0, 'start': np.float64(23.6), 'end': np.float64(26.74), 'text': ' And it acts like a little inbox for incoming data', 'tokens': [51551, 843, 340, 6529, 588, 257, 1310, 13734, 329, 15619, 1366, 51707], 'temperature': 0.0, 'avg_logprob': -0.22616027549461082, 'compression_ratio': 1.7303030303030302, 'no_speech_prob': 0.009415959939360619, 'words': [{'word': ' And', 'start': np.float64(23.6), 'end': np.float64(24.06), 'probability': np.float64(0.3980775475502014)}, {'word': ' it', 'start': np.float64(24.06), 'end': np.float64(24.2), 'probability': np.float64(0.9951645135879517)}, {'word': ' acts', 'start': np.float64(24.2), 'end': np.float64(24.38), 'probability': np.float64(0.9890880584716797)}, {'word': ' like', 'start': np.float64(24.38), 'end': np.float64(24.52), 'probability': np.float64(0.9836916923522949)}, {'word': ' a', 'start': np.float64(24.52), 'end': np.float64(24.68), 'probability': np.float64(0.9908086657524109)}, {'word': ' little', 'start': np.float64(24.68), 'end': np.float64(24.94), 'probability': np.float64(0.9987071752548218)}, {'word': ' inbox', 'start': np.float64(24.94), 'end': np.float64(25.5), 'probability': np.float64(0.9480335116386414)}, {'word': ' for', 'start': np.float64(25.5), 'end': np.float64(25.92), 'probability': np.float64(0.9931092262268066)}, {'word': ' incoming', 'start': np.float64(25.92), 'end': np.float64(26.4), 'probability': np.float64(0.9956983327865601)}, {'word': ' data', 'start': np.float64(26.4), 'end': np.float64(26.74), 'probability': np.float64(0.9988540410995483)}]}, {'id': 8, 'seek': 2674, 'start': np.float64(26.74), 'end': np.float64(31.16), 'text': " If that inbox fills up, your program can't take anymore and the client has to wait.", 'tokens': [50363, 1002, 326, 13734, 23816, 510, 11, 534, 1430, 460, 470, 1011, 7471, 290, 262, 5456, 468, 284, 4043, 13, 50579], 'temperature': 0.0, 'avg_logprob': -0.25601346492767335, 'compression_ratio': 1.4951456310679612, 'no_speech_prob': 0.008799372240900993, 'words': [{'word': ' If', 'start': np.float64(26.74), 'end': np.float64(27.28), 'probability': np.float64(0.8895859718322754)}, {'word': ' that', 'start': np.float64(27.28), 'end': np.float64(27.48), 'probability': np.float64(0.9572904706001282)}, {'word': ' inbox', 'start': np.float64(27.48), 'end': np.float64(27.74), 'probability': np.float64(0.9784536361694336)}, {'word': ' fills', 'start': np.float64(27.74), 'end': np.float64(27.96), 'probability': np.float64(0.993986964225769)}, {'word': ' up,', 'start': np.float64(27.96), 'end': np.float64(28.32), 'probability': np.float64(0.9941518902778625)}, {'word': ' your', 'start': np.float64(28.6), 'end': np.float64(28.68), 'probability': np.float64(0.9429430365562439)}, {'word': ' program', 'start': np.float64(28.68), 'end': np.float64(29.06), 'probability': np.float64(0.9869717955589294)}, {'word': " can't", 'start': np.float64(29.06), 'end': np.float64(29.38), 'probability': np.float64(0.9842116832733154)}, {'word': ' take', 'start': np.float64(29.38), 'end': np.float64(29.54), 'probability': np.float64(0.993678867816925)}, {'word': ' anymore', 'start': np.float64(29.54), 'end': np.float64(29.86), 'probability': np.float64(0.7829645872116089)}, {'word': ' and', 'start': np.float64(29.86), 'end': np.float64(30.1), 'probability': np.float64(0.8600577116012573)}, {'word': ' the', 'start': np.float64(30.1), 'end': np.float64(30.22), 'probability': np.float64(0.9191655516624451)}, {'word': ' client', 'start': np.float64(30.22), 'end': np.float64(30.44), 'probability': np.float64(0.9956132173538208)}, {'word': ' has', 'start': np.float64(30.44), 'end': np.float64(30.72), 'probability': np.float64(0.9875895977020264)}, {'word': ' to', 'start': np.float64(30.72), 'end': np.float64(30.94), 'probability': np.float64(0.9980371594429016)}, {'word': ' wait.', 'start': np.float64(30.94), 'end': np.float64(31.16), 'probability': np.float64(0.9993399977684021)}]}, {'id': 9, 'seek': 2674, 'start': np.float64(31.64), 'end': np.float64(34.04), 'text': ' So what do you do if we run into a partial read like this?', 'tokens': [50583, 1406, 644, 466, 345, 466, 611, 356, 1057, 656, 257, 13027, 1100, 588, 428, 30, 50720], 'temperature': 0.0, 'avg_logprob': -0.25601346492767335, 'compression_ratio': 1.4951456310679612, 'no_speech_prob': 0.008799372240900993, 'words': [{'word': ' So', 'start': np.float64(31.64), 'end': np.float64(31.66), 'probability': np.float64(0.958376944065094)}, {'word': ' what', 'start': np.float64(31.66), 'end': np.float64(31.8), 'probability': np.float64(0.93124920129776)}, {'word': ' do', 'start': np.float64(31.8), 'end': np.float64(31.88), 'probability': np.float64(0.9730167388916016)}, {'word': ' you', 'start': np.float64(31.88), 'end': np.float64(31.96), 'probability': np.float64(0.41571342945098877)}, {'word': ' do', 'start': np.float64(31.96), 'end': np.float64(32.14), 'probability': np.float64(0.9863794445991516)}, {'word': ' if', 'start': np.float64(32.14), 'end': np.float64(32.28), 'probability': np.float64(0.9705979228019714)}, {'word': ' we', 'start': np.float64(32.28), 'end': np.float64(32.4), 'probability': np.float64(0.6464478373527527)}, {'word': ' run', 'start': np.float64(32.4), 'end': np.float64(32.52), 'probability': np.float64(0.9906693696975708)}, {'word': ' into', 'start': np.float64(32.52), 'end': np.float64(32.72), 'probability': np.float64(0.9912832975387573)}, {'word': ' a', 'start': np.float64(32.72), 'end': np.float64(32.96), 'probability': np.float64(0.9842584133148193)}, {'word': ' partial', 'start': np.float64(32.96), 'end': np.float64(33.28), 'probability': np.float64(0.994260311126709)}, {'word': ' read', 'start': np.float64(33.28), 'end': np.float64(33.52), 'probability': np.float64(0.9836498498916626)}, {'word': ' like', 'start': np.float64(33.52), 'end': np.float64(33.72), 'probability': np.float64(0.9818098545074463)}, {'word': ' this?', 'start': np.float64(33.72), 'end': np.float64(34.04), 'probability': np.float64(0.997497022151947)}]}, {'id': 10, 'seek': 2674, 'start': np.float64(34.48), 'end': np.float64(41.8), 'text': " Well, the solution is actually really simple and it's to create a wrapper around Redfie that reads until we've reached LenBites", 'tokens': [50727, 3894, 11, 262, 4610, 318, 1682, 1107, 2829, 290, 340, 338, 284, 2251, 257, 29908, 1088, 2297, 69, 494, 326, 9743, 1566, 356, 1053, 4251, 12592, 33, 2737, 51111], 'temperature': 0.0, 'avg_logprob': -0.25601346492767335, 'compression_ratio': 1.4951456310679612, 'no_speech_prob': 0.008799372240900993, 'words': [{'word': ' Well,', 'start': np.float64(34.48), 'end': np.float64(34.58), 'probability': np.float64(0.9254797101020813)}, {'word': ' the', 'start': np.float64(34.84), 'end': np.float64(35.08), 'probability': np.float64(0.9260257482528687)}, {'word': ' solution', 'start': np.float64(35.08), 'end': np.float64(35.34), 'probability': np.float64(0.9950286746025085)}, {'word': ' is', 'start': np.float64(35.34), 'end': np.float64(35.62), 'probability': np.float64(0.9939054846763611)}, {'word': ' actually', 'start': np.float64(35.62), 'end': np.float64(36.02), 'probability': np.float64(0.9744114875793457)}, {'word': ' really', 'start': np.float64(36.02), 'end': np.float64(36.36), 'probability': np.float64(0.9807270765304565)}, {'word': ' simple', 'start': np.float64(36.36), 'end': np.float64(36.78), 'probability': np.float64(0.998412013053894)}, {'word': ' and', 'start': np.float64(36.78), 'end': np.float64(36.98), 'probability': np.float64(0.5810470581054688)}, {'word': " it's", 'start': np.float64(36.98), 'end': np.float64(37.14), 'probability': np.float64(0.9666244089603424)}, {'word': ' to', 'start': np.float64(37.14), 'end': np.float64(37.24), 'probability': np.float64(0.9930850267410278)}, {'word': ' create', 'start': np.float64(37.24), 'end': np.float64(37.42), 'probability': np.float64(0.9962873458862305)}, {'word': ' a', 'start': np.float64(37.42), 'end': np.float64(37.6), 'probability': np.float64(0.9978534579277039)}, {'word': ' wrapper', 'start': np.float64(37.6), 'end': np.float64(37.96), 'probability': np.float64(0.9732152223587036)}, {'word': ' around', 'start': np.float64(37.96), 'end': np.float64(38.48), 'probability': np.float64(0.9120084643363953)}, {'word': ' Redfie', 'start': np.float64(38.48), 'end': np.float64(38.96), 'probability': np.float64(0.29735995332400006)}, {'word': ' that', 'start': np.float64(38.96), 'end': np.float64(39.52), 'probability': np.float64(0.9228188395500183)}, {'word': ' reads', 'start': np.float64(39.52), 'end': np.float64(39.94), 'probability': np.float64(0.9895398020744324)}, {'word': ' until', 'start': np.float64(39.94), 'end': np.float64(40.36), 'probability': np.float64(0.26321786642074585)}, {'word': " we've", 'start': np.float64(40.36), 'end': np.float64(40.7), 'probability': np.float64(0.9834648966789246)}, {'word': ' reached', 'start': np.float64(40.7), 'end': np.float64(41.02), 'probability': np.float64(0.9930002689361572)}, {'word': ' LenBites', 'start': np.float64(41.02), 'end': np.float64(41.8), 'probability': np.float64(0.496082271138827)}]}, {'id': 11, 'seek': 2674, 'start': np.float64(41.8), 'end': np.float64(44.22), 'text': ' where Len is the size that we expect.', 'tokens': [51111, 810, 12592, 318, 262, 2546, 326, 356, 1607, 13, 51240], 'temperature': 0.0, 'avg_logprob': -0.25601346492767335, 'compression_ratio': 1.4951456310679612, 'no_speech_prob': 0.008799372240900993, 'words': [{'word': ' where', 'start': np.float64(41.8), 'end': np.float64(42.04), 'probability': np.float64(0.45294928550720215)}, {'word': ' Len', 'start': np.float64(42.04), 'end': np.float64(42.36), 'probability': np.float64(0.8258059024810791)}, {'word': ' is', 'start': np.float64(42.36), 'end': np.float64(42.62), 'probability': np.float64(0.991209864616394)}, {'word': ' the', 'start': np.float64(42.62), 'end': np.float64(42.9), 'probability': np.float64(0.9907398223876953)}, {'word': ' size', 'start': np.float64(42.9), 'end': np.float64(43.34), 'probability': np.float64(0.9989029169082642)}, {'word': ' that', 'start': np.float64(43.34), 'end': np.float64(43.66), 'probability': np.float64(0.9597817063331604)}, {'word': ' we', 'start': np.float64(43.66), 'end': np.float64(43.82), 'probability': np.float64(0.9980409741401672)}, {'word': ' expect.', 'start': np.float64(43.82), 'end': np.float64(44.22), 'probability': np.float64(0.9783844947814941)}]}], 'language': 'en'}
initialized contiguous was  So I was digging through the man pages because that's what you do when you're trying to build a multi-threading creative file server in C++
looping, end of last: 6 start of next: 5 with text:  So I was digging through the man pages because that's what you do when you're trying to build a multi-threading creative file server in C++
looping, end of last: 7 start of next: 6 with text:  So I was digging through the man pages because that's what you do when you're trying to build a multi-threading creative file server in C++
looping, end of last: 10 start of next: 9 with text:  So I was digging through the man pages because that's what you do when you're trying to build a multi-threading creative file server in C++
looping, end of last: 15 start of next: 14 with text:  So I was digging through the man pages because that's what you do when you're trying to build a multi-threading creative file server in C++
looping, end of last: 21 start of next: 20 with text:  So I was digging through the man pages because that's what you do when you're trying to build a multi-threading creative file server in C++
looping, end of last: 22 start of next: 21 with text:  So I was digging through the man pages because that's what you do when you're trying to build a multi-threading creative file server in C++
looping, end of last: 25 start of next: 24 with text:  So I was digging through the man pages because that's what you do when you're trying to build a multi-threading creative file server in C++
looping, end of last: 28 start of next: 27 with text:  So I was digging through the man pages because that's what you do when you're trying to build a multi-threading creative file server in C++
looping, end of last: 32 start of next: 32 with text:  So I was digging through the man pages because that's what you do when you're trying to build a multi-threading creative file server in C++
looping, end of last: 35 start of next: 34 with text:  So I was digging through the man pages because that's what you do when you're trying to build a multi-threading creative file server in C++
looping, end of last: 43 start of next: 42 with text:  So I was digging through the man pages because that's what you do when you're trying to build a multi-threading creative file server in C++
this is the repunctuated? SO I was digging through the man pages because that's what you do when you're trying to build a multi-threading creative file server in C++ Which is painful by the way I was trying to figure out why I was getting this partial read error Basically that's when you try to read a certain amount of data from the network, but only get part of it Now. The reason I was getting this was because [UNK] actually uses something I haven't heard people talk about And that's the receive buffer Every [UNK] connection has one in the kernel ANd. It acts like a little inbox for incoming data IF that inbox fills up, your program can't take anymore, and the client has to wait. SO what do you do if we run into a partial read like this? Well, The solution is actually really simple and it's to create a wrapper around Redfie that reads until we've reached [UNK] where Len is the size that we expect..
dat was None
false
[]
